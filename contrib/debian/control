Source: galilel
Section: utils
Priority: optional
Maintainer: Maik Broemme <mbroemme@libmpq.org>
Uploaders: Micah Anderson <mbroemme@libmpq.org>
Build-Depends: debhelper,
 devscripts,
 automake,
 libtool,
 bash-completion,
 libboost-system-dev (>> 1.35) | libboost-system1.35-dev,
 libdb4.8++-dev,
 libssl-dev,
 pkg-config,
 libminiupnpc8-dev,
 libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,
 libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,
 libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,
 libboost-test-dev (>> 1.35) | libboost-test1.35-dev,
 qt4-qmake,
 libqt4-dev,
 libqrencode-dev,
 libprotobuf-dev, protobuf-compiler
Standards-Version: 3.9.2
Homepage: https://galilel.cloud
Vcs-Git: git://github.com/Galilel-Project/galilel
Vcs-Browser: http://github.com/Galilel-Project/galilel

Package: galileld
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: peer-to-peer network based digital currency - daemon
 Galilel (GALI) is an open-source Proof-of-Work digital cryptocurrency
 for fast (using SwiftX), private (Zerocoin protocol) and secure
 microtransactions. Our main goal is to create a decentralized fully
 secure and anonymous network to run applications which do not rely on
 any central body control. By having a distributed system, thousands of
 users will be responsible for maintaining the application and data so
 that there is no single point of failure.
 .
 Full transaction history is stored locally at each client.  This
 requires 1+ GB of space, slowly growing.
 .
 This package provides the daemon, galileld, and the CLI tool
 galilel-cli to interact with the daemon.

Package: galilel-qt
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: peer-to-peer network based digital currency - Qt GUI
 Galilel (GALI) is an open-source Proof-of-Work digital cryptocurrency
 for fast (using SwiftX), private (Zerocoin protocol) and secure
 microtransactions. Our main goal is to create a decentralized fully
 secure and anonymous network to run applications which do not rely on
 any central body control. By having a distributed system, thousands of
 users will be responsible for maintaining the application and data so
 that there is no single point of failure.
 .
 Full transaction history is stored locally at each client.  This
 requires 1+ GB of space, slowly growing.
 .
 This package provides Galilel-Qt, a GUI for Galilel based on Qt.
